name: test-and-run

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup Docker Buildx
    - name: Docker Setup
      uses: docker/setup-buildx-action@v2

    # Docker login
    - name: Docker Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Generate Docker tag
    - name: Docker tag
      id: version
      run: |
        VERSION=v$(date +"%Y%m%d%H%M%S")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t coolsahil500/argocd-demo-frontend:${{ env.VERSION }} .

    # Push Docker Image
    - name: Push Docker Image
      run: |
        docker push coolsahil500/argocd-demo-frontend:${{ env.VERSION }}

    # Update image in Kubernetes manifest
    - name: Update K8s Manifests
      run: |
        sed -i "s|image: coolsahil500/argocd-demo-frontend:.*|image: coolsahil500/argocd-demo-frontend:${{ env.VERSION }}|g" deploy/deployment.yaml

    # Commit changes back to GitHub (only if changed)
    - name: Commit the changes
      run: |
        git config --global user.email "github-actions@users.noreply.github.com"
        git config --global user.name "GitHub Actions Bot"

        git pull origin main --rebase

        git add deploy/deployment.yaml

        if git diff --cached --quiet; then
          echo "âœ… No changes to commit."
        else
          git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
          git push origin main
        fi
